<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <string name="app_name">Authenticator</string>

    <!-- Button on the Manual Account Entry page to add the account the details of which the user
         is entering on the page. -->
    <string name="enter_key_page_add_button">Add</string>

    <!-- Label for a button on the main screen: add a new OTP account -->
    <string name="button_add_account">Add an account</string>

    <!-- Button on the Add Other Account screen that lets the user add an account by manually entering
         account details. -->
    <string name="button_add_account_manual_entry"><p>No QR code? <font color="#3F51B5" > <u>Enter key_ manually</u></font></p></string>

    <!-- Button on the Add Other Account screen that lets the user add an account by scanning a QR
         code. -->
    <string name="button_add_account_scan_barcode">\t Scan QR Code</string>

    <!-- Form field to enter account name (part of the form used for manually adding account) -->
    <string name="enter_account_label">Enter account name</string>

    <!-- Example displayed in the secret key field before user starts typing there -->
    <string name="enter_key_hint">Enter your key</string>

    <!-- Error message displayed if user enters a key that is shorter than allowed minimum -->
    <string name="enter_key_too_short">Key value is too short</string>

    <!-- Error message displayed if user enters a key with an illegal character -->
    <string name="enter_key_illegal_char">Key value has illegal character</string>

    <!-- Confirmation message displayed in a toast after adding new account -->
    <string name="secret_saved">Secret saved</string>

    <!-- Error message displayed if the scanned QR code contains an empty key -->
    <string name="error_empty_secret">Cannot save empty secret</string>

    <!-- Instruction message displayed on the main screen -->
    <string name="enter_pin">
    Enter this verification code if prompted during account sign-in:
  </string>

    <!-- Menu item user selects to view the key integrity check for a particular account -->
    <string name="check_code_menu_item">Check key value</string>

    <!-- Button on manual account entry page, adds the account -->
    <string name="submit">Save</string>

    <!-- Button on manual account entry page, cancels adding account, returns to main page -->
    <string name="cancel">Cancel</string>

    <!-- Menu item when long-pressing on account, used to remove the account -->
    <string name="context_menu_remove_account">Remove</string>

    <!-- Remove/Delete button in the dialog displayed when the user attempts to remove an account.
         -->
    <string name="remove_account_dialog_button_remove">Remove account</string>

    <!-- Title of the dialog displayed when the user attempts to remove an account. -->
    <string name="remove_account_dialog_title">
    Remove <xliff:g id="account" example="mallory@gmail.com">%1$s</xliff:g>?
  </string>

    <!-- Text (HTML) of the dialog displayed when the user attempts to delete an account.
         The dialog offers two buttons: Remove (remove_account_dialog_button_remove) and Cancel. -->
    <string name="remove_account_dialog_message">
    <![CDATA[
      Removing this account will <b>remove your ability</b> to generate codes, however, it will
      <b>not</b> turn off 2-factor authentication. This may prevent you from signing into your
      account.
      <p>
      Before removing:
      <ul>
        <li>Turn off 2-factor authentication for this account, or</li>
        <li>Ensure you have an alternate mechanism for generating codes.</li>
      </ul>
    ]]>
  </string>

    <!-- Text (HTML) of the dialog displayed when the user attempts to remove a Google account.
         The text differs slightly from remove_account_dialog_button_remove which is displayed
         for non-Google accounts for which we don't know the exact effects of removing the account.
         The dialog offers two buttons: Remove (remove_account_dialog_button_remove) and Cancel. -->
    <string name="remove_google_account_dialog_message">
    <![CDATA[
      Removing this account will <b>remove your ability</b> to generate codes, however, it will
      <b>not</b> turn off 2-step verification. This may prevent you from signing into your account.
      <p>
      Before removing:
      <ul>
        <li>Turn off 2-step verification for this account, or</li>
        <li>Ensure you have an alternate mechanism for generating codes.</li>
      </ul>
    ]]>
  </string>

    <!-- Long-press menu item for an account, used to rename that account -->
    <string name="rename">Rename</string>

    <!-- Text in dialog shown when user selects "Rename" menu item for a given
         account, with the parameter indicating existing account name -->
    <string name="rename_message">Rename <xliff:g id="account" example="mallory@gmail.com">%1$s</xliff:g></string>

    <!-- Error message displayed when user tries to rename one account to the same
         name as another existing account -->
    <string name="error_exists">Sorry, that name is already in use.</string>

    <!-- Long-press menu item for an account, copies current OTP code for that account
         to the phone clipboard -->
    <string name="copy_to_clipboard">Copy to clipboard</string>

    <!-- Text reported to the accessibility system (e.g., on screen reader)
         when the user selects a counter-based account (from the account list)
         for which no code is currently displayed/generated.
         Pressing on the account row will generate the next verification
         code. -->
    <string name="counter_pin">Get code</string>

    <!-- Placeholder value displayed for OTP before any codes have been generated -->
    <string name="empty_pin">_ _ _ _ _ _</string>

    <!-- Label for the dropdown menu when adding new account manually.
         Asking user to specify one of the two key types (counter vs. time) -->
    <string name="type_prompt">Type of key</string>

    <!-- NOTE: order matters here and must be the same as AccountDb.TYPE_*
         TODO(adhintz): make order not matter by using something like enums -->
    <!-- Different type of OTP accounts, displayed in drop-down menu when manually adding accounts.
         Codes can be generated either based on time or based on an incrementing counter. -->
    <string-array name="type">
        <item>Time based</item>
        <item>Counter based</item>
    </string-array>

    <string name="tip_add_account">Adding new Account</string>
    <string name="tip_add_account_content" >Please enter the for your account name and key.</string>

</resources>
